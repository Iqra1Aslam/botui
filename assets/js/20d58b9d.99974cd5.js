"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[915],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,d=p["".concat(c,".").concat(m)]||p[m]||f[m]||a;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8162:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(5773),o=(n(7378),n(5318));const a={},s="Gotchas and Known Issues",i={unversionedId:"gotchas",id:"gotchas",title:"Gotchas and Known Issues",description:"Auto-resolving bot",source:"@site/docs/4-gotchas.md",sourceDirName:".",slug:"/gotchas",permalink:"/gotchas",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Core vs UI packages",permalink:"/concepts"},next:{title:"`botui` Package",permalink:"/core/"}},c={},l=[{value:"Auto-resolving bot",id:"auto-resolving-bot",level:2}],u={toc:l},p="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gotchas-and-known-issues"},"Gotchas and Known Issues"),(0,o.kt)("h2",{id:"auto-resolving-bot"},"Auto-resolving bot"),(0,o.kt)("p",null,"Sometimes, especially in development envoirnment, it would seem like you bot does not wait and resolves itself. Event the actions resolve with undefined data. That happens usually when the dev env hot-reloads and initial code (e.g: ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect"),") is called multiple times. To fix this, make sure you start your bot only once."),(0,o.kt)("p",null,"Here's an example of fix in React:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const runBot = (bot: BotuiInterface) => {\n  bot.message.add({ text: "hello" })\n}\n\nlet timer: NodeJS.Timeout\n\nexport const HomeBot = () => {\n  const botRef = useRef(createBot())\n  const mybot = botRef.current\n\n  useEffect(() => {\n    clearTimeout(timer) // makes sure to clear previous call\n    timer = setTimeout(() => runBot(mybot), 100)\n  })\n\n  return <>...</>\n}\n')))}f.isMDXComponent=!0}}]);